/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RushRouteImport } from './routes/rush'
import { Route as ConsultingRouteImport } from './routes/consulting'
import { Route as BrothersRouteImport } from './routes/brothers'
import { Route as AlumniRouteImport } from './routes/alumni'
import { Route as IndexRouteImport } from './routes/index'

const RushRoute = RushRouteImport.update({
  id: '/rush',
  path: '/rush',
  getParentRoute: () => rootRouteImport,
} as any)
const ConsultingRoute = ConsultingRouteImport.update({
  id: '/consulting',
  path: '/consulting',
  getParentRoute: () => rootRouteImport,
} as any)
const BrothersRoute = BrothersRouteImport.update({
  id: '/brothers',
  path: '/brothers',
  getParentRoute: () => rootRouteImport,
} as any)
const AlumniRoute = AlumniRouteImport.update({
  id: '/alumni',
  path: '/alumni',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/alumni': typeof AlumniRoute
  '/brothers': typeof BrothersRoute
  '/consulting': typeof ConsultingRoute
  '/rush': typeof RushRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/alumni': typeof AlumniRoute
  '/brothers': typeof BrothersRoute
  '/consulting': typeof ConsultingRoute
  '/rush': typeof RushRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/alumni': typeof AlumniRoute
  '/brothers': typeof BrothersRoute
  '/consulting': typeof ConsultingRoute
  '/rush': typeof RushRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/alumni' | '/brothers' | '/consulting' | '/rush'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/alumni' | '/brothers' | '/consulting' | '/rush'
  id: '__root__' | '/' | '/alumni' | '/brothers' | '/consulting' | '/rush'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AlumniRoute: typeof AlumniRoute
  BrothersRoute: typeof BrothersRoute
  ConsultingRoute: typeof ConsultingRoute
  RushRoute: typeof RushRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/rush': {
      id: '/rush'
      path: '/rush'
      fullPath: '/rush'
      preLoaderRoute: typeof RushRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/consulting': {
      id: '/consulting'
      path: '/consulting'
      fullPath: '/consulting'
      preLoaderRoute: typeof ConsultingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/brothers': {
      id: '/brothers'
      path: '/brothers'
      fullPath: '/brothers'
      preLoaderRoute: typeof BrothersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/alumni': {
      id: '/alumni'
      path: '/alumni'
      fullPath: '/alumni'
      preLoaderRoute: typeof AlumniRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AlumniRoute: AlumniRoute,
  BrothersRoute: BrothersRoute,
  ConsultingRoute: ConsultingRoute,
  RushRoute: RushRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
